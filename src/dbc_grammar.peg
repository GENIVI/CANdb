# DBC Grammar
grammar                 <- spacing _ version _ comment* ns_comment bs? _ (bu / bu_sl)? _ val_table? _ message* _ bo_tx_bu* _ cm* _ ba_def* _ ba_def_def* _ ba* _ vals* sig_val* _ EndOfFile

spacing                 <- (s / comment)*
ns_comment              <- (ns? / comment)? NewLine*
version                 <- < 'VERSION' s* phrase s* > NewLine
ns                      <- < 'NS_' s* ':' s* NewLine symbol_name* > NewLine
bs                      <- < 'BS_' s* ':' s* NewLine symbol_name* > NewLine
bu                      <- < 'BU_' s* ':' s* NewLine symbol_name* > NewLine
bu_sl                   <- < 'BU_' s* ':' s* TOKEN (s* TOKEN)* > NewLine
val_table               <- val_entry* NewLine
message                 <- 'BO_' s* number s* TOKEN ':' s number s TOKEN _ signal* (TrailingSpace / _ )
bo_tx_bu                <- < 'BO_TX_BU_' s* number s* ':' s* TOKEN ',' TOKEN ';' > NewLine
cm                      <- (< 'CM_' s* (TOKEN / number) s* number* s* TOKEN* s* phrase ';' > NewLine) / comment
ba_def                  <- (< 'BA_DEF_' s* (('BO_' / 'SG_' / 'BU_') s*)? phrase s* TOKEN s* number* s* number* ';' > (NewLine / s* comment) ) / comment
ba_def_def              <- < 'BA_DEF_DEF_' s* phrase s* (phrase / number ) ';' > NewLine
ba                      <- < 'BA_' s* phrase s* (phrase / number ) ';' > NewLine
vals                    <- < 'VAL_' s* number s* TOKEN s* number s* phrase s* (number s* phrase s*)* s* ';' > NewLine*
comment                 <- '//' (!NewLine .)* NewLine
sig_val                 <- < 'SIG_VALTYPE_' s* number s* TOKEN s* ':' s* number ';' > NewLine

signal                  <- < s* 'SG_' s* TOKEN s* ':' s* number '|' number '@' number sign s* '(' number ',' s* number ')' s* '[' number '|' number ']' s* phrase s* TOKEN (',' TOKEN)* > NewLine
val_entry               <- < 'VAL_TABLE_' s* TOKEN s (number_phrase_pair)* ';' > NewLine
number_phrase_pair      <- number s phrase s
phrase                  <- < '"' (!'"' .)* '"' >
sign                    <- < [-+] > _
TOKEN                   <- [a-zA-Z0-9'_']+
number                  <- float / integer 
integer                 <- < sign? [0-9]+ > _
float                   <- < sign? [0-9]+'.'[0-9]+ > _
symbol_name             <- < s* TOKEN > NewLine

EndOfFile <- !.

s         <- [ \t]
NewLine   <- [\r\n]

TrailingSpace  <- ' '* _

~_     <- [\t\r\n]*
~__    <- ![a-zA-Z0-9]

